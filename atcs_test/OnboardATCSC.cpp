// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "OnboardATCSC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"

#if !defined (__ACE_INLINE__)
#include "OnboardATCSC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:108

#if !defined (_ONBOARDATCS_SHORTSEQ_CS_)
#define _ONBOARDATCS_SHORTSEQ_CS_

OnboardATCS::ShortSeq::ShortSeq (void)
{}

OnboardATCS::ShortSeq::ShortSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Short
      > (max)
{}

OnboardATCS::ShortSeq::ShortSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Short * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Short
      >
    (max, length, buffer, release)
{}

OnboardATCS::ShortSeq::~ShortSeq (void)
{}

void OnboardATCS::ShortSeq::_tao_any_destructor (
    void * _tao_void_pointer)
{
  ShortSeq * _tao_tmp_pointer =
    static_cast<ShortSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_OnboardATCS_ShortSeq_GUARD
#define _TAO_TYPECODE_OnboardATCS_ShortSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        OnboardATCS_ShortSeq_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_short,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_OnboardATCS_ShortSeq_0 =
        &OnboardATCS_ShortSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_OnboardATCS_ShortSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_OnboardATCS_ShortSeq (
    ::CORBA::tk_alias,
    "IDL:OnboardATCS/ShortSeq:1.0",
    "ShortSeq",
    &TAO::TypeCode::tc_OnboardATCS_ShortSeq_0);
  

namespace OnboardATCS
{
  ::CORBA::TypeCode_ptr const _tc_ShortSeq =
    &_tao_tc_OnboardATCS_ShortSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_OnboardATCS_TrainMessage[] =
      {
        { "msg_id", &CORBA::_tc_short },
        { "seq", &CORBA::_tc_short },
        { "timestamp", &TimeBase::_tc_TimeT },
        { "temp", &CORBA::_tc_string },
        { "nid_train_id", &CORBA::_tc_short },
        { "nid_train_num", &CORBA::_tc_short },
        { "nid_lrtg", &CORBA::_tc_short },
        { "d_ftag", &CORBA::_tc_short },
        { "d_rtag", &CORBA::_tc_short },
        { "l_doubt_over", &CORBA::_tc_short },
        { "l_doubt_under", &CORBA::_tc_short },
        { "v_train", &CORBA::_tc_short },
        { "n_iter_i", &CORBA::_tc_short },
        { "d_dist_from_i", &OnboardATCS::_tc_ShortSeq },
        { "d_dist_to_i", &OnboardATCS::_tc_ShortSeq },
        { "nid_tag_from_i", &OnboardATCS::_tc_ShortSeq },
        { "nid_tag_to_i", &OnboardATCS::_tc_ShortSeq },
        { "n_iter_j", &CORBA::_tc_short },
        { "nid_switch_j", &OnboardATCS::_tc_ShortSeq },
        { "n_iter_k", &CORBA::_tc_short },
        { "d_sdist_from_k", &OnboardATCS::_tc_ShortSeq },
        { "d_stag_from_k", &OnboardATCS::_tc_ShortSeq },
        { "nid_stag_from_k", &OnboardATCS::_tc_ShortSeq },
        { "nid_stag_to_k", &OnboardATCS::_tc_ShortSeq },
        { "n_iter_l", &CORBA::_tc_short },
        { "nid_switch_id_l", &OnboardATCS::_tc_ShortSeq }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_OnboardATCS_TrainMessage (
  ::CORBA::tk_struct,
  "IDL:OnboardATCS/TrainMessage:1.0",
  "TrainMessage",
  _tao_fields_OnboardATCS_TrainMessage,
  26);


namespace OnboardATCS
{
  ::CORBA::TypeCode_ptr const _tc_TrainMessage =
    &_tao_tc_OnboardATCS_TrainMessage;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
OnboardATCS::TrainMessage::_tao_any_destructor (
    void *_tao_void_pointer)
{
  TrainMessage *_tao_tmp_pointer =
    static_cast<TrainMessage *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OnboardATCS
{
  
  // Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::OnboardATCS::ShortSeq &_tao_elem
    )
  {
    TAO::Any_Dual_Impl_T< ::OnboardATCS::ShortSeq>::insert_copy (
        _tao_any,
        ::OnboardATCS::ShortSeq::_tao_any_destructor,
        ::OnboardATCS::_tc_ShortSeq,
        _tao_elem
      );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ::OnboardATCS::ShortSeq *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::OnboardATCS::ShortSeq>::insert (
      _tao_any,
      ::OnboardATCS::ShortSeq::_tao_any_destructor,
      ::OnboardATCS::_tc_ShortSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::OnboardATCS::ShortSeq *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::OnboardATCS::ShortSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::OnboardATCS::ShortSeq *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::OnboardATCS::ShortSeq>::extract (
        _tao_any,
        ::OnboardATCS::ShortSeq::_tao_any_destructor,
        ::OnboardATCS::_tc_ShortSeq,
        _tao_elem
      );
}
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const OnboardATCS::ShortSeq &_tao_elem)
{
  TAO::Any_Dual_Impl_T<OnboardATCS::ShortSeq>::insert_copy (
      _tao_any,
      OnboardATCS::ShortSeq::_tao_any_destructor,
      OnboardATCS::_tc_ShortSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    OnboardATCS::ShortSeq *_tao_elem)
{
  TAO::Any_Dual_Impl_T<OnboardATCS::ShortSeq>::insert (
      _tao_any,
      OnboardATCS::ShortSeq::_tao_any_destructor,
      OnboardATCS::_tc_ShortSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    OnboardATCS::ShortSeq *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const OnboardATCS::ShortSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const OnboardATCS::ShortSeq *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<OnboardATCS::ShortSeq>::extract (
        _tao_any,
        OnboardATCS::ShortSeq::_tao_any_destructor,
        OnboardATCS::_tc_ShortSeq,
        _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OnboardATCS
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::OnboardATCS::TrainMessage &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::OnboardATCS::TrainMessage>::insert_copy (
        _tao_any,
        ::OnboardATCS::TrainMessage::_tao_any_destructor,
        ::OnboardATCS::_tc_TrainMessage,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    OnboardATCS::TrainMessage *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::OnboardATCS::TrainMessage>::insert (
      _tao_any,
      ::OnboardATCS::TrainMessage::_tao_any_destructor,
      ::OnboardATCS::_tc_TrainMessage,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::OnboardATCS::TrainMessage *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::OnboardATCS::TrainMessage *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::OnboardATCS::TrainMessage *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::OnboardATCS::TrainMessage>::extract (
        _tao_any,
        ::OnboardATCS::TrainMessage::_tao_any_destructor,
        ::OnboardATCS::_tc_TrainMessage,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const OnboardATCS::TrainMessage &_tao_elem)
{
  TAO::Any_Dual_Impl_T<OnboardATCS::TrainMessage>::insert_copy (
    _tao_any,
    OnboardATCS::TrainMessage::_tao_any_destructor,
    OnboardATCS::_tc_TrainMessage,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  OnboardATCS::TrainMessage *_tao_elem)
{
  TAO::Any_Dual_Impl_T<OnboardATCS::TrainMessage>::insert (
    _tao_any,
    OnboardATCS::TrainMessage::_tao_any_destructor,
    OnboardATCS::_tc_TrainMessage,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  OnboardATCS::TrainMessage *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const OnboardATCS::TrainMessage *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const OnboardATCS::TrainMessage *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<OnboardATCS::TrainMessage>::extract (
      _tao_any,
      OnboardATCS::TrainMessage::_tao_any_destructor,
      OnboardATCS::_tc_TrainMessage,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_OnboardATCS_ShortSeq_CPP_
#define _TAO_CDR_OP_OnboardATCS_ShortSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OnboardATCS::ShortSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OnboardATCS::ShortSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_OnboardATCS_ShortSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OnboardATCS::TrainMessage &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.msg_id) &&
    (strm << _tao_aggregate.seq) &&
    (strm << _tao_aggregate.timestamp) &&
    (strm << _tao_aggregate.temp.in ()) &&
    (strm << _tao_aggregate.nid_train_id) &&
    (strm << _tao_aggregate.nid_train_num) &&
    (strm << _tao_aggregate.nid_lrtg) &&
    (strm << _tao_aggregate.d_ftag) &&
    (strm << _tao_aggregate.d_rtag) &&
    (strm << _tao_aggregate.l_doubt_over) &&
    (strm << _tao_aggregate.l_doubt_under) &&
    (strm << _tao_aggregate.v_train) &&
    (strm << _tao_aggregate.n_iter_i) &&
    (strm << _tao_aggregate.d_dist_from_i) &&
    (strm << _tao_aggregate.d_dist_to_i) &&
    (strm << _tao_aggregate.nid_tag_from_i) &&
    (strm << _tao_aggregate.nid_tag_to_i) &&
    (strm << _tao_aggregate.n_iter_j) &&
    (strm << _tao_aggregate.nid_switch_j) &&
    (strm << _tao_aggregate.n_iter_k) &&
    (strm << _tao_aggregate.d_sdist_from_k) &&
    (strm << _tao_aggregate.d_stag_from_k) &&
    (strm << _tao_aggregate.nid_stag_from_k) &&
    (strm << _tao_aggregate.nid_stag_to_k) &&
    (strm << _tao_aggregate.n_iter_l) &&
    (strm << _tao_aggregate.nid_switch_id_l);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OnboardATCS::TrainMessage &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.msg_id) &&
    (strm >> _tao_aggregate.seq) &&
    (strm >> _tao_aggregate.timestamp) &&
    (strm >> _tao_aggregate.temp.out ()) &&
    (strm >> _tao_aggregate.nid_train_id) &&
    (strm >> _tao_aggregate.nid_train_num) &&
    (strm >> _tao_aggregate.nid_lrtg) &&
    (strm >> _tao_aggregate.d_ftag) &&
    (strm >> _tao_aggregate.d_rtag) &&
    (strm >> _tao_aggregate.l_doubt_over) &&
    (strm >> _tao_aggregate.l_doubt_under) &&
    (strm >> _tao_aggregate.v_train) &&
    (strm >> _tao_aggregate.n_iter_i) &&
    (strm >> _tao_aggregate.d_dist_from_i) &&
    (strm >> _tao_aggregate.d_dist_to_i) &&
    (strm >> _tao_aggregate.nid_tag_from_i) &&
    (strm >> _tao_aggregate.nid_tag_to_i) &&
    (strm >> _tao_aggregate.n_iter_j) &&
    (strm >> _tao_aggregate.nid_switch_j) &&
    (strm >> _tao_aggregate.n_iter_k) &&
    (strm >> _tao_aggregate.d_sdist_from_k) &&
    (strm >> _tao_aggregate.d_stag_from_k) &&
    (strm >> _tao_aggregate.nid_stag_from_k) &&
    (strm >> _tao_aggregate.nid_stag_to_k) &&
    (strm >> _tao_aggregate.n_iter_l) &&
    (strm >> _tao_aggregate.nid_switch_id_l);
}

TAO_END_VERSIONED_NAMESPACE_DECL



