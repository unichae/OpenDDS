// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "OnboardATCSTypeSupportC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "OnboardATCSTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_OnboardATCS_TrainMessageSeq_GUARD
#define _TAO_TYPECODE_OnboardATCS_TrainMessageSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        OnboardATCS_TrainMessageSeq_0 (
          ::CORBA::tk_sequence,
          &OnboardATCS::_tc_TrainMessage,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_OnboardATCS_TrainMessageSeq_0 =
        &OnboardATCS_TrainMessageSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_OnboardATCS_TrainMessageSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_OnboardATCS_TrainMessageSeq (
    ::CORBA::tk_alias,
    "IDL:OnboardATCS/TrainMessageSeq:1.0",
    "TrainMessageSeq",
    &TAO::TypeCode::tc_OnboardATCS_TrainMessageSeq_0);
  

namespace OnboardATCS
{
  ::CORBA::TypeCode_ptr const _tc_TrainMessageSeq =
    &_tao_tc_OnboardATCS_TrainMessageSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OnboardATCS::TrainMessageTypeSupport.

OnboardATCS::TrainMessageTypeSupport_ptr
TAO::Objref_Traits<OnboardATCS::TrainMessageTypeSupport>::duplicate (
    OnboardATCS::TrainMessageTypeSupport_ptr p)
{
  return OnboardATCS::TrainMessageTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OnboardATCS::TrainMessageTypeSupport>::release (
    OnboardATCS::TrainMessageTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OnboardATCS::TrainMessageTypeSupport_ptr
TAO::Objref_Traits<OnboardATCS::TrainMessageTypeSupport>::nil (void)
{
  return OnboardATCS::TrainMessageTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OnboardATCS::TrainMessageTypeSupport>::marshal (
    const OnboardATCS::TrainMessageTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OnboardATCS::TrainMessageTypeSupport::TrainMessageTypeSupport (void)
{}

OnboardATCS::TrainMessageTypeSupport::~TrainMessageTypeSupport (void)
{
}

void
OnboardATCS::TrainMessageTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  TrainMessageTypeSupport *_tao_tmp_pointer =
    static_cast<TrainMessageTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

OnboardATCS::TrainMessageTypeSupport_ptr
OnboardATCS::TrainMessageTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TrainMessageTypeSupport::_duplicate (
      dynamic_cast<TrainMessageTypeSupport_ptr> (_tao_objref)
    );
}

OnboardATCS::TrainMessageTypeSupport_ptr
OnboardATCS::TrainMessageTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TrainMessageTypeSupport::_duplicate (
      dynamic_cast<TrainMessageTypeSupport_ptr> (_tao_objref)
    );
}

OnboardATCS::TrainMessageTypeSupport_ptr
OnboardATCS::TrainMessageTypeSupport::_nil (void)
{
  return 0;
}

OnboardATCS::TrainMessageTypeSupport_ptr
OnboardATCS::TrainMessageTypeSupport::_duplicate (TrainMessageTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OnboardATCS::TrainMessageTypeSupport::_tao_release (TrainMessageTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OnboardATCS::TrainMessageTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OnboardATCS/TrainMessageTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OnboardATCS::TrainMessageTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OnboardATCS/TrainMessageTypeSupport:1.0";
}

::CORBA::Boolean
OnboardATCS::TrainMessageTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OnboardATCS_TrainMessageTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:OnboardATCS/TrainMessageTypeSupport:1.0",
    "TrainMessageTypeSupport");
  

namespace OnboardATCS
{
  ::CORBA::TypeCode_ptr const _tc_TrainMessageTypeSupport =
    &_tao_tc_OnboardATCS_TrainMessageTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OnboardATCS::TrainMessageDataWriter.

OnboardATCS::TrainMessageDataWriter_ptr
TAO::Objref_Traits<OnboardATCS::TrainMessageDataWriter>::duplicate (
    OnboardATCS::TrainMessageDataWriter_ptr p)
{
  return OnboardATCS::TrainMessageDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OnboardATCS::TrainMessageDataWriter>::release (
    OnboardATCS::TrainMessageDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OnboardATCS::TrainMessageDataWriter_ptr
TAO::Objref_Traits<OnboardATCS::TrainMessageDataWriter>::nil (void)
{
  return OnboardATCS::TrainMessageDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OnboardATCS::TrainMessageDataWriter>::marshal (
    const OnboardATCS::TrainMessageDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OnboardATCS::TrainMessageDataWriter::TrainMessageDataWriter (void)
{}

OnboardATCS::TrainMessageDataWriter::~TrainMessageDataWriter (void)
{
}

void
OnboardATCS::TrainMessageDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  TrainMessageDataWriter *_tao_tmp_pointer =
    static_cast<TrainMessageDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

OnboardATCS::TrainMessageDataWriter_ptr
OnboardATCS::TrainMessageDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TrainMessageDataWriter::_duplicate (
      dynamic_cast<TrainMessageDataWriter_ptr> (_tao_objref)
    );
}

OnboardATCS::TrainMessageDataWriter_ptr
OnboardATCS::TrainMessageDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TrainMessageDataWriter::_duplicate (
      dynamic_cast<TrainMessageDataWriter_ptr> (_tao_objref)
    );
}

OnboardATCS::TrainMessageDataWriter_ptr
OnboardATCS::TrainMessageDataWriter::_nil (void)
{
  return 0;
}

OnboardATCS::TrainMessageDataWriter_ptr
OnboardATCS::TrainMessageDataWriter::_duplicate (TrainMessageDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OnboardATCS::TrainMessageDataWriter::_tao_release (TrainMessageDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OnboardATCS::TrainMessageDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OnboardATCS/TrainMessageDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OnboardATCS::TrainMessageDataWriter::_interface_repository_id (void) const
{
  return "IDL:OnboardATCS/TrainMessageDataWriter:1.0";
}

::CORBA::Boolean
OnboardATCS::TrainMessageDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OnboardATCS_TrainMessageDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:OnboardATCS/TrainMessageDataWriter:1.0",
    "TrainMessageDataWriter");
  

namespace OnboardATCS
{
  ::CORBA::TypeCode_ptr const _tc_TrainMessageDataWriter =
    &_tao_tc_OnboardATCS_TrainMessageDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OnboardATCS::TrainMessageDataReader.

OnboardATCS::TrainMessageDataReader_ptr
TAO::Objref_Traits<OnboardATCS::TrainMessageDataReader>::duplicate (
    OnboardATCS::TrainMessageDataReader_ptr p)
{
  return OnboardATCS::TrainMessageDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OnboardATCS::TrainMessageDataReader>::release (
    OnboardATCS::TrainMessageDataReader_ptr p)
{
  ::CORBA::release (p);
}

OnboardATCS::TrainMessageDataReader_ptr
TAO::Objref_Traits<OnboardATCS::TrainMessageDataReader>::nil (void)
{
  return OnboardATCS::TrainMessageDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OnboardATCS::TrainMessageDataReader>::marshal (
    const OnboardATCS::TrainMessageDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OnboardATCS::TrainMessageDataReader::TrainMessageDataReader (void)
{}

OnboardATCS::TrainMessageDataReader::~TrainMessageDataReader (void)
{
}

void
OnboardATCS::TrainMessageDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  TrainMessageDataReader *_tao_tmp_pointer =
    static_cast<TrainMessageDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

OnboardATCS::TrainMessageDataReader_ptr
OnboardATCS::TrainMessageDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TrainMessageDataReader::_duplicate (
      dynamic_cast<TrainMessageDataReader_ptr> (_tao_objref)
    );
}

OnboardATCS::TrainMessageDataReader_ptr
OnboardATCS::TrainMessageDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TrainMessageDataReader::_duplicate (
      dynamic_cast<TrainMessageDataReader_ptr> (_tao_objref)
    );
}

OnboardATCS::TrainMessageDataReader_ptr
OnboardATCS::TrainMessageDataReader::_nil (void)
{
  return 0;
}

OnboardATCS::TrainMessageDataReader_ptr
OnboardATCS::TrainMessageDataReader::_duplicate (TrainMessageDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OnboardATCS::TrainMessageDataReader::_tao_release (TrainMessageDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OnboardATCS::TrainMessageDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OnboardATCS/TrainMessageDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OnboardATCS::TrainMessageDataReader::_interface_repository_id (void) const
{
  return "IDL:OnboardATCS/TrainMessageDataReader:1.0";
}

::CORBA::Boolean
OnboardATCS::TrainMessageDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OnboardATCS_TrainMessageDataReader (
    ::CORBA::tk_local_interface,
    "IDL:OnboardATCS/TrainMessageDataReader:1.0",
    "TrainMessageDataReader");
  

namespace OnboardATCS
{
  ::CORBA::TypeCode_ptr const _tc_TrainMessageDataReader =
    &_tao_tc_OnboardATCS_TrainMessageDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OnboardATCS
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      TrainMessageTypeSupport_ptr _tao_elem)
  {
    TrainMessageTypeSupport_ptr _tao_objptr =
      TrainMessageTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      TrainMessageTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<TrainMessageTypeSupport>::insert (
        _tao_any,
        TrainMessageTypeSupport::_tao_any_destructor,
        _tc_TrainMessageTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      TrainMessageTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<TrainMessageTypeSupport>::extract (
          _tao_any,
          TrainMessageTypeSupport::_tao_any_destructor,
          _tc_TrainMessageTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageTypeSupport_ptr _tao_elem)
{
  OnboardATCS::TrainMessageTypeSupport_ptr _tao_objptr =
    OnboardATCS::TrainMessageTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OnboardATCS::TrainMessageTypeSupport>::insert (
      _tao_any,
      OnboardATCS::TrainMessageTypeSupport::_tao_any_destructor,
      OnboardATCS::_tc_TrainMessageTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OnboardATCS::TrainMessageTypeSupport>::extract (
        _tao_any,
        OnboardATCS::TrainMessageTypeSupport::_tao_any_destructor,
        OnboardATCS::_tc_TrainMessageTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OnboardATCS
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      TrainMessageDataWriter_ptr _tao_elem)
  {
    TrainMessageDataWriter_ptr _tao_objptr =
      TrainMessageDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      TrainMessageDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<TrainMessageDataWriter>::insert (
        _tao_any,
        TrainMessageDataWriter::_tao_any_destructor,
        _tc_TrainMessageDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      TrainMessageDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<TrainMessageDataWriter>::extract (
          _tao_any,
          TrainMessageDataWriter::_tao_any_destructor,
          _tc_TrainMessageDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageDataWriter_ptr _tao_elem)
{
  OnboardATCS::TrainMessageDataWriter_ptr _tao_objptr =
    OnboardATCS::TrainMessageDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OnboardATCS::TrainMessageDataWriter>::insert (
      _tao_any,
      OnboardATCS::TrainMessageDataWriter::_tao_any_destructor,
      OnboardATCS::_tc_TrainMessageDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OnboardATCS::TrainMessageDataWriter>::extract (
        _tao_any,
        OnboardATCS::TrainMessageDataWriter::_tao_any_destructor,
        OnboardATCS::_tc_TrainMessageDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OnboardATCS::TrainMessageDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OnboardATCS
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      TrainMessageDataReader_ptr _tao_elem)
  {
    TrainMessageDataReader_ptr _tao_objptr =
      TrainMessageDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      TrainMessageDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<TrainMessageDataReader>::insert (
        _tao_any,
        TrainMessageDataReader::_tao_any_destructor,
        _tc_TrainMessageDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      TrainMessageDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<TrainMessageDataReader>::extract (
          _tao_any,
          TrainMessageDataReader::_tao_any_destructor,
          _tc_TrainMessageDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageDataReader_ptr _tao_elem)
{
  OnboardATCS::TrainMessageDataReader_ptr _tao_objptr =
    OnboardATCS::TrainMessageDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OnboardATCS::TrainMessageDataReader>::insert (
      _tao_any,
      OnboardATCS::TrainMessageDataReader::_tao_any_destructor,
      OnboardATCS::_tc_TrainMessageDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OnboardATCS::TrainMessageDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OnboardATCS::TrainMessageDataReader>::extract (
        _tao_any,
        OnboardATCS::TrainMessageDataReader::_tao_any_destructor,
        OnboardATCS::_tc_TrainMessageDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

