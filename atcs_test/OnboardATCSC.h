// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_ONBOARDATCSC_FH6UND_H_
#define _TAO_IDL_ONBOARDATCSC_FH6UND_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "orbsvcs/TimeBaseC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace OnboardATCS
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_ONBOARDATCS_SHORTSEQ_CH_)
#define _ONBOARDATCS_SHORTSEQ_CH_

  class ShortSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        ShortSeq
      >
    ShortSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ShortSeq
      >
    ShortSeq_out;

  class  ShortSeq
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Short
          >
  {
  public:
    ShortSeq (void);
    ShortSeq ( ::CORBA::ULong max);
    ShortSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Short* buffer,
      ::CORBA::Boolean release = false);
#if defined (ACE_HAS_CPP11)
    ShortSeq (const ShortSeq &) = default;
    ShortSeq (ShortSeq &&) = default;
    ShortSeq& operator= (const ShortSeq &) = default;
    ShortSeq& operator= (ShortSeq &&) = default;
#endif /* ACE_HAS_CPP11 */
    virtual ~ShortSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef ShortSeq_var _var_type;
    typedef ShortSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ShortSeq;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct TrainMessage;

  typedef
    ::TAO_Var_Var_T<
        TrainMessage
      >
    TrainMessage_var;

  typedef
    ::TAO_Out_T<
        TrainMessage
      >
    TrainMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  TrainMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef TrainMessage_var _var_type;
    typedef TrainMessage_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Short msg_id;
    ::CORBA::Short seq;
    TimeBase::TimeT timestamp;
    ::TAO::String_Manager temp;
    ::CORBA::Short nid_train_id;
    ::CORBA::Short nid_train_num;
    ::CORBA::Short nid_lrtg;
    ::CORBA::Short d_ftag;
    ::CORBA::Short d_rtag;
    ::CORBA::Short l_doubt_over;
    ::CORBA::Short l_doubt_under;
    ::CORBA::Short v_train;
    ::CORBA::Short n_iter_i;
    OnboardATCS::ShortSeq d_dist_from_i;
    OnboardATCS::ShortSeq d_dist_to_i;
    OnboardATCS::ShortSeq nid_tag_from_i;
    OnboardATCS::ShortSeq nid_tag_to_i;
    ::CORBA::Short n_iter_j;
    OnboardATCS::ShortSeq nid_switch_j;
    ::CORBA::Short n_iter_k;
    OnboardATCS::ShortSeq d_sdist_from_k;
    OnboardATCS::ShortSeq d_stag_from_k;
    OnboardATCS::ShortSeq nid_stag_from_k;
    OnboardATCS::ShortSeq nid_stag_to_k;
    ::CORBA::Short n_iter_l;
    OnboardATCS::ShortSeq nid_switch_id_l;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_TrainMessage;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module OnboardATCS

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::OnboardATCS::ShortSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::OnboardATCS::ShortSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::OnboardATCS::TrainMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::OnboardATCS::TrainMessage,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OnboardATCS
{
   void operator<<= ( ::CORBA::Any &, const ::OnboardATCS::ShortSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::OnboardATCS::ShortSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::OnboardATCS::ShortSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::OnboardATCS::ShortSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const OnboardATCS::ShortSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, OnboardATCS::ShortSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OnboardATCS::ShortSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const OnboardATCS::ShortSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OnboardATCS
{
   void operator<<= (::CORBA::Any &, const ::OnboardATCS::TrainMessage &); // copying version
   void operator<<= (::CORBA::Any &, ::OnboardATCS::TrainMessage*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::OnboardATCS::TrainMessage *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::OnboardATCS::TrainMessage *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const OnboardATCS::TrainMessage &); // copying version
 void operator<<= (::CORBA::Any &, OnboardATCS::TrainMessage*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OnboardATCS::TrainMessage *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const OnboardATCS::TrainMessage *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_OnboardATCS_ShortSeq_H_
#define _TAO_CDR_OP_OnboardATCS_ShortSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OnboardATCS::ShortSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OnboardATCS::ShortSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_OnboardATCS_ShortSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OnboardATCS::TrainMessage &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OnboardATCS::TrainMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "OnboardATCSC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

