project(*Common) : dcps {
  sharedname = StockQuoterCommon
  libout = .
  includes += $(TAO_ROOT)/orbsvcs
  idlflags += -I$(TAO_ROOT)/orbsvcs
  idlflags += -Wb,export_macro=StockQuoterCommon_Export
  idlflags += -Wb,export_include=StockQuoterCommon_Export.h
  dcps_ts_flags += --export=StockQuoterCommon_Export
  dynamicflags = STOCKQUOTERCOMMON_BUILD_DLL
  
  TypeSupport_Files {
    StockQuoter.idl
  }

  IDL_Files {
    StockQuoterTypeSupport.idl
    StockQuoter.idl
  }

  Header_Files {
      StockQuoterTypeSupportImpl.h
  }

  Source_Files {
      StockQuoterTypeSupportImpl.cpp
  }
}

project(*Publisher) : dcpsexe, svc_utils {
  after += *Common
  exename   = publisher

  includes += $(TAO_ROOT)/orbsvcs
  libs += StockQuoterCommon
  dynamicflags = STOCKQUOTERCOMMON_HAS_DLL

  TypeSupport_Files {
  }

  IDL_Files {
  }

  Header_Files {
  }

  Source_Files {
    publisher.cpp
  }

  Documentation_Files {
    README.txt
    domain_ids
  }
}

project(*Subscriber) : dcpsexe {
  after += *Common
  exename   = subscriber

  includes += $(TAO_ROOT)/orbsvcs
  libs += StockQuoterCommon
  dynamicflags = STOCKQUOTERCOMMON_HAS_DLL

  TypeSupport_Files {
  }

  IDL_Files {
  }

  Header_Files {
    QuoteDataReaderListenerImpl.h
    ExchangeEventDataReaderListenerImpl.h
  }

  Source_Files {
    QuoteDataReaderListenerImpl.cpp
    ExchangeEventDataReaderListenerImpl.cpp
    subscriber.cpp
  }

  Documentation_Files {
    README.txt
    domain_ids
  }
}