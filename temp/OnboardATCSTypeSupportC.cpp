// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "OnboardATCSTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "OnboardATCSTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OnboardATCS::TestMessageTypeSupport.

OnboardATCS::TestMessageTypeSupport_ptr
TAO::Objref_Traits<OnboardATCS::TestMessageTypeSupport>::duplicate (
    OnboardATCS::TestMessageTypeSupport_ptr p)
{
  return OnboardATCS::TestMessageTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OnboardATCS::TestMessageTypeSupport>::release (
    OnboardATCS::TestMessageTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OnboardATCS::TestMessageTypeSupport_ptr
TAO::Objref_Traits<OnboardATCS::TestMessageTypeSupport>::nil (void)
{
  return OnboardATCS::TestMessageTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OnboardATCS::TestMessageTypeSupport>::marshal (
    const OnboardATCS::TestMessageTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OnboardATCS::TestMessageTypeSupport::TestMessageTypeSupport (void)
{}

OnboardATCS::TestMessageTypeSupport::~TestMessageTypeSupport (void)
{
}

OnboardATCS::TestMessageTypeSupport_ptr
OnboardATCS::TestMessageTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestMessageTypeSupport::_duplicate (
      dynamic_cast<TestMessageTypeSupport_ptr> (_tao_objref)
    );
}

OnboardATCS::TestMessageTypeSupport_ptr
OnboardATCS::TestMessageTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestMessageTypeSupport::_duplicate (
      dynamic_cast<TestMessageTypeSupport_ptr> (_tao_objref)
    );
}

OnboardATCS::TestMessageTypeSupport_ptr
OnboardATCS::TestMessageTypeSupport::_nil (void)
{
  return 0;
}

OnboardATCS::TestMessageTypeSupport_ptr
OnboardATCS::TestMessageTypeSupport::_duplicate (TestMessageTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OnboardATCS::TestMessageTypeSupport::_tao_release (TestMessageTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OnboardATCS::TestMessageTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OnboardATCS/TestMessageTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OnboardATCS::TestMessageTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OnboardATCS/TestMessageTypeSupport:1.0";
}

::CORBA::Boolean
OnboardATCS::TestMessageTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OnboardATCS::TestMessageDataWriter.

OnboardATCS::TestMessageDataWriter_ptr
TAO::Objref_Traits<OnboardATCS::TestMessageDataWriter>::duplicate (
    OnboardATCS::TestMessageDataWriter_ptr p)
{
  return OnboardATCS::TestMessageDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OnboardATCS::TestMessageDataWriter>::release (
    OnboardATCS::TestMessageDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OnboardATCS::TestMessageDataWriter_ptr
TAO::Objref_Traits<OnboardATCS::TestMessageDataWriter>::nil (void)
{
  return OnboardATCS::TestMessageDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OnboardATCS::TestMessageDataWriter>::marshal (
    const OnboardATCS::TestMessageDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OnboardATCS::TestMessageDataWriter::TestMessageDataWriter (void)
{}

OnboardATCS::TestMessageDataWriter::~TestMessageDataWriter (void)
{
}

OnboardATCS::TestMessageDataWriter_ptr
OnboardATCS::TestMessageDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestMessageDataWriter::_duplicate (
      dynamic_cast<TestMessageDataWriter_ptr> (_tao_objref)
    );
}

OnboardATCS::TestMessageDataWriter_ptr
OnboardATCS::TestMessageDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestMessageDataWriter::_duplicate (
      dynamic_cast<TestMessageDataWriter_ptr> (_tao_objref)
    );
}

OnboardATCS::TestMessageDataWriter_ptr
OnboardATCS::TestMessageDataWriter::_nil (void)
{
  return 0;
}

OnboardATCS::TestMessageDataWriter_ptr
OnboardATCS::TestMessageDataWriter::_duplicate (TestMessageDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OnboardATCS::TestMessageDataWriter::_tao_release (TestMessageDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OnboardATCS::TestMessageDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OnboardATCS/TestMessageDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OnboardATCS::TestMessageDataWriter::_interface_repository_id (void) const
{
  return "IDL:OnboardATCS/TestMessageDataWriter:1.0";
}

::CORBA::Boolean
OnboardATCS::TestMessageDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OnboardATCS::TestMessageDataReader.

OnboardATCS::TestMessageDataReader_ptr
TAO::Objref_Traits<OnboardATCS::TestMessageDataReader>::duplicate (
    OnboardATCS::TestMessageDataReader_ptr p)
{
  return OnboardATCS::TestMessageDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OnboardATCS::TestMessageDataReader>::release (
    OnboardATCS::TestMessageDataReader_ptr p)
{
  ::CORBA::release (p);
}

OnboardATCS::TestMessageDataReader_ptr
TAO::Objref_Traits<OnboardATCS::TestMessageDataReader>::nil (void)
{
  return OnboardATCS::TestMessageDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OnboardATCS::TestMessageDataReader>::marshal (
    const OnboardATCS::TestMessageDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OnboardATCS::TestMessageDataReader::TestMessageDataReader (void)
{}

OnboardATCS::TestMessageDataReader::~TestMessageDataReader (void)
{
}

OnboardATCS::TestMessageDataReader_ptr
OnboardATCS::TestMessageDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestMessageDataReader::_duplicate (
      dynamic_cast<TestMessageDataReader_ptr> (_tao_objref)
    );
}

OnboardATCS::TestMessageDataReader_ptr
OnboardATCS::TestMessageDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestMessageDataReader::_duplicate (
      dynamic_cast<TestMessageDataReader_ptr> (_tao_objref)
    );
}

OnboardATCS::TestMessageDataReader_ptr
OnboardATCS::TestMessageDataReader::_nil (void)
{
  return 0;
}

OnboardATCS::TestMessageDataReader_ptr
OnboardATCS::TestMessageDataReader::_duplicate (TestMessageDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OnboardATCS::TestMessageDataReader::_tao_release (TestMessageDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OnboardATCS::TestMessageDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OnboardATCS/TestMessageDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OnboardATCS::TestMessageDataReader::_interface_repository_id (void) const
{
  return "IDL:OnboardATCS/TestMessageDataReader:1.0";
}

::CORBA::Boolean
OnboardATCS::TestMessageDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

